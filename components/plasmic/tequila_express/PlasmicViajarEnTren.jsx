// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: uEWT1C6ySrjtSMWJntBego
// Component: VP9OiVjyPtq9
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  hasVariant,
  initializeCodeComponentStates,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import MainHeader from "../../MainHeader"; // plasmic-import: wtnE0On9QToy/component
import { SliderWrapper } from "@plasmicpkgs/react-slick";
import { sliderHelpers as SliderWrapper_Helpers } from "@plasmicpkgs/react-slick";
import Footer from "../../Footer"; // plasmic-import: Iz_Y_kKZMHTD/component
import { useScreenVariants as useScreenVariantsraGa2MJbEFd } from "../website_starter/PlasmicGlobalVariant__Screen"; // plasmic-import: RaGa2M-JbEFd/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "../website_starter/plasmic.module.css"; // plasmic-import: uEWT1C6ySrjtSMWJntBego/projectcss
import sty from "./PlasmicViajarEnTren.module.css"; // plasmic-import: VP9OiVjyPtq9/css

createPlasmicElementProxy;

export const PlasmicViajarEnTren__VariantProps = new Array();

export const PlasmicViajarEnTren__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicViajarEnTren__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "sliderCarousel.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,
        refName: "sliderCarousel",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      },
      {
        path: "mainHeader.menuOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsraGa2MJbEFd()
  });
  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicViajarEnTren.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicViajarEnTren.pageMetadata.title}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicViajarEnTren.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"mainSection"}
          data-plasmic-override={overrides.mainSection}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.mainSection
          )}
        >
          <MainHeader
            data-plasmic-name={"mainHeader"}
            data-plasmic-override={overrides.mainHeader}
            className={classNames("__wab_instance", sty.mainHeader)}
            menuOpen={generateStateValueProp($state, [
              "mainHeader",
              "menuOpen"
            ])}
            onMenuOpenChange={generateStateOnChangeProp($state, [
              "mainHeader",
              "menuOpen"
            ])}
          />

          <div
            data-plasmic-name={"mainBanner"}
            data-plasmic-override={overrides.mainBanner}
            className={classNames(projectcss.all, sty.mainBanner)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"banner"}
              data-plasmic-override={overrides.banner}
              hasGap={true}
              className={classNames(projectcss.all, sty.banner)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__tESM
                )}
              >
                {"Donde cada kil\u00f3metro cuenta una historia"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__e5Fbj
                )}
              >
                {
                  "Viajar en tren te permite disfrutar del paisaje, relajarte, leer o conversar libremente; convirtiendo el trayecto en una experiencia por s\u00ed misma."
                }
              </div>
            </Stack__>
          </div>
          <Stack__
            as={"div"}
            data-plasmic-name={"stats"}
            data-plasmic-override={overrides.stats}
            hasGap={true}
            className={classNames(projectcss.all, sty.stats)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"left"}
              data-plasmic-override={overrides.left}
              hasGap={true}
              className={classNames(projectcss.all, sty.left)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___8Fm5K
                )}
              >
                {"Un viaje panor\u00e1mico,\nun viaje sustentable"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__nxVCp
                )}
              >
                {
                  "Abre los ojos para disfrutar cada segundo de tu camino destino Tequila con vistas inaccesibles desde la carretera.\n\nTequila Express es m\u00e1s que una experiencia cultural en Jalisco; tambi\u00e9n es una manera de practicar el turismo responsable, utilizando uno de los medios de transporte m\u00e1s ecol\u00f3gicos mientras descubres el paisaje agavero catalogado por la UNESCO como Patrimonio Cultural de la Humanidad."
                }
              </div>
            </Stack__>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__ybh4U)}
              displayHeight={
                hasVariant(globalVariants, "screen", "mobile")
                  ? "300px"
                  : hasVariant(globalVariants, "screen", "tablet")
                  ? "400px"
                  : "100%"
              }
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={
                hasVariant(globalVariants, "screen", "tablet") ? "100%" : "50%"
              }
              loading={"lazy"}
              src={{
                src: "/plasmic/tequila_express/images/rectangle37Jpg4.jpg",
                fullWidth: 1031,
                fullHeight: 690,
                aspectRatio: undefined
              }}
            />
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"banner2"}
            data-plasmic-override={overrides.banner2}
            hasGap={true}
            className={classNames(projectcss.all, sty.banner2)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___4OaPk)}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__zgxQy)}
                displayHeight={
                  hasVariant(globalVariants, "screen", "mobile")
                    ? "250px"
                    : hasVariant(globalVariants, "screen", "tablet")
                    ? "400px"
                    : "550px"
                }
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={
                  hasVariant(globalVariants, "screen", "tablet")
                    ? "100%"
                    : "50%"
                }
                loading={"lazy"}
                src={{
                  src: "/plasmic/tequila_express/images/rectangle37Jpg2.jpg",
                  fullWidth: 1186,
                  fullHeight: 794,
                  aspectRatio: undefined
                }}
              />

              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___4Dyzj)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__klEbs
                  )}
                >
                  {"Un fest\u00edn para los sentidos"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2TnDk
                  )}
                >
                  {
                    "Viaja en trenes dise\u00f1ados para brindarte el m\u00e1ximo confort y estilo. Disfruta de un recorrido de aproximadamente dos horas con vistas panor\u00e1micas, amplios vagones y amenidades que volver\u00e1n tu ruta del tequila inolvidable."
                  }
                </div>
              </Stack__>
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"stats2"}
            data-plasmic-override={overrides.stats2}
            hasGap={true}
            className={classNames(projectcss.all, sty.stats2)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"left2"}
              data-plasmic-override={overrides.left2}
              hasGap={true}
              className={classNames(projectcss.all, sty.left2)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__uyJEq
                )}
              >
                {"V\u00edas que\nconectan contigo"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vsErD
                )}
              >
                {
                  "Ya sea que viajes solo, en pareja, con amigos o en familia;\nen Tequila Express encontrar\u00e1s el itinerario ideal para ti."
                }
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__psXSy
                )}
              >
                {"Tequila Express une esas y mil historias m\u00e1s a bordo"}
              </div>
            </Stack__>
            {(() => {
              const child$Props = {
                arrows: false,
                autoplay: true,
                autoplaySpeed: 5000,
                beforeChange: generateStateOnChangePropForCodeComponents(
                  $state,
                  "currentSlide",
                  ["sliderCarousel", "currentSlide"],
                  SliderWrapper_Helpers
                ),
                centerMode: false,
                className: classNames("__wab_instance", sty.sliderCarousel),
                dots: true,
                initialSlide: generateStateValueProp($state, [
                  "sliderCarousel",
                  "currentSlide"
                ]),
                ref: ref => {
                  $refs["sliderCarousel"] = ref;
                },
                sliderScopeClassName: sty["sliderCarousel__slider"]
              };
              initializeCodeComponentStates(
                $state,
                [
                  {
                    name: "currentSlide",
                    plasmicStateName: "sliderCarousel.currentSlide"
                  }
                ],

                [],
                SliderWrapper_Helpers ?? {},
                child$Props
              );
              return (
                <SliderWrapper
                  data-plasmic-name={"sliderCarousel"}
                  data-plasmic-override={overrides.sliderCarousel}
                  {...child$Props}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__pklOz)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iOzTp
                      )}
                    >
                      {"Un viaje para aprender"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sYHge)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4C2T
                      )}
                    >
                      {"Un lugar para fortalecer lazos"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__fnyXo)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jlLgB
                      )}
                    >
                      {"Una experiencia cultural en tu viaje de negocios"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__y8Hp)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ugqH8
                      )}
                    >
                      {"Una escapada rom\u00e1ntica"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__nWy4M)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sYu2A
                      )}
                    >
                      {"Una inmersi\u00f3n cultural personal"}
                    </div>
                  </div>
                </SliderWrapper>
              );
            })()}
          </Stack__>
          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  mainSection: [
    "mainSection",
    "mainHeader",
    "mainBanner",
    "banner",
    "stats",
    "left",
    "banner2",
    "stats2",
    "left2",
    "sliderCarousel",
    "footer"
  ],

  mainHeader: ["mainHeader"],
  mainBanner: ["mainBanner", "banner"],
  banner: ["banner"],
  stats: ["stats", "left"],
  left: ["left"],
  banner2: ["banner2"],
  stats2: ["stats2", "left2", "sliderCarousel"],
  left2: ["left2"],
  sliderCarousel: ["sliderCarousel"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicViajarEnTren__ArgProps,
          internalVariantPropNames: PlasmicViajarEnTren__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicViajarEnTren__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "mainSection") {
    func.displayName = "PlasmicViajarEnTren";
  } else {
    func.displayName = `PlasmicViajarEnTren.${nodeName}`;
  }
  return func;
}

export const PlasmicViajarEnTren = Object.assign(
  // Top-level PlasmicViajarEnTren renders the root element
  makeNodeComponent("mainSection"),
  {
    // Helper components rendering sub-elements
    mainHeader: makeNodeComponent("mainHeader"),
    mainBanner: makeNodeComponent("mainBanner"),
    banner: makeNodeComponent("banner"),
    stats: makeNodeComponent("stats"),
    left: makeNodeComponent("left"),
    banner2: makeNodeComponent("banner2"),
    stats2: makeNodeComponent("stats2"),
    left2: makeNodeComponent("left2"),
    sliderCarousel: makeNodeComponent("sliderCarousel"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicViajarEnTren
    internalVariantProps: PlasmicViajarEnTren__VariantProps,
    internalArgProps: PlasmicViajarEnTren__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Viajar en Tren",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicViajarEnTren;
/* prettier-ignore-end */
